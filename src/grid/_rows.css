/*

  ROWS

*/

.row {
  margin-right: auto;
  margin-left: auto;
  padding: var(--grid-gutter-v) var(--grid-gutter-h);
  max-width: calc( var(--grid-max-width) + (2 * var(--grid-gutter-h) ) );

  &::after {
    display: table;
    clear: both;
    content: "";
  }
}

@media (--breakpoint--s) {
  .row {
    padding: var(--grid-gutter-v--s) var(--grid-gutter-h--s);
    max-width: calc( var(--grid-max-width) + (2 * var(--grid-gutter-h--s) ) );
  }
}

@media (--breakpoint--m) {
  .row {
    padding: var(--grid-gutter-v--m) var(--grid-gutter-h--m);
    max-width: calc( var(--grid-max-width) + (2 * var(--grid-gutter-h--m) ) );
  }
}

@media (--breakpoint--l) {
  .row {
    padding: var(--grid-gutter-v--l) var(--grid-gutter-h--l);
    max-width: calc( var(--grid-max-width) + (2 * var(--grid-gutter-h--l) ) );
  }
}

@media (--breakpoint--x) {
  .row {
    padding: var(--grid-gutter-v--x) var(--grid-gutter-h--x);
    max-width: calc( var(--grid-max-width) + (2 * var(--grid-gutter-h--x) ) );
  }
}

/* TODO: Nested Grids (Alpha) */

.row .row {
  padding-top: 0;
  padding-right: 0;
  padding-bottom: 0;
  padding-left: 0;
}
